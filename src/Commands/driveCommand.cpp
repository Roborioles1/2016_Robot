// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "driveCommand.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

driveCommand::driveCommand(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::chassis.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void driveCommand::Initialize() {

}

// Called repeatedly when this Command is scheduled to run
void driveCommand::Execute() {
	Joystick* leftStick = Robot::oi->getLeftJoystick();
	Joystick* rightStick = Robot::oi->getRightJoystick();
	float left;
	float right;

	left = leftStick->GetY();
	right = rightStick->GetY();
	Robot::chassis->leftFrontMotor->Set(left*left*left);
	Robot::chassis->rightFrontMotor->Set(right*right*right);
	Robot::chassis->leftRearMotor->Set(left*left*left);
	Robot::chassis->rightRearMotor->Set(right*right*right);
}

// Make this return true when this Command no longer needs to run execute()
bool driveCommand::IsFinished() {
    return false;
}

// Called once after isFinished returns true
void driveCommand::End() {
	Robot::chassis->leftFrontMotor->Set(0);
	Robot::chassis->leftRearMotor->Set(0);
	Robot::chassis->rightFrontMotor->Set(0);
	Robot::chassis->rightRearMotor->Set(0);}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void driveCommand::Interrupted() {
	End();
}
